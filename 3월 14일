어제 안하기로 했는데, 그냥 정리할꺼면 패턴 다 하고, 나중에 GOF 책을 보든 알아서 하면 좋을 것 같아 하기로 했다..
인터럽트 패턴: 간단한 인터럽트(java같은 그냔 script언어에 사용되는 것)를 역할로 두고, 구현부.. 그러니까, 문법(메소드랑 변수값 이용한거) 같은 거를 class로 둬서 사용하는 패턴
그냥 복잡한 거는 자바처럼 원시 언어로 짠 프로그램이 파싱되도록 하거나, 컴파일러 생성기를 쓰는 것이 좋다고 함
이터레이터 패턴: 배열, 스택, 해시테이블 같은 리스트들을 다른 class에 둬서 모든 객체를 일일히 접근할 수 있도록 해주는 패턴
이제 디자인 패턴이름만 봐도 대충 어떻게 쓰는 지 왜 쓰는지 깔끔하게 구분되는 수준에 온 것 같다
위 시간으로 oop에 대해서는 좀 친숙해진 것 같다는 생각이 들었고, 이제 3월 남은 시간동안 스픞링이랑 ddd 맛보기랑 프론트엔드 설계 연습하고 이번 달은 마무리하면 될 것 같다
오늘 부터 다시 스프링 기초강의 듣고 있는데 먼 말인지 귀에 쏙쏙 들어온다 내용이 이해가 되는 것 같아서 스프링 계속 공부해도 될 것 같기도 하다..
전에는 설정할 때 해맸는데, 이제는 vscode같은 환경에도 익숙해지니 인텔리제이도 따라와서 친숙해지는 것 같은 느낌도 드는 것 같다.
나중에 김영한 강사님이 요구사항 분석하는 법이나 EPR 다이어그램 짜는 과정은 나중에 그대로 갖다 쓰듯 하면 될 것 같아서 좋다..
오늘은 공부한 강의가 얼마 안되지만, 먼가 굳이 말하지 않아도 왜 이렇게 하였는가에 대한 답이 그대로 돌아오는 것 같다..
회원 도메인 실행과 테스트에서 DIP 안지킨다길래 먼지 확인만 해보고, 먼 뜻인지만 확인해보고 말씀하신대로 코드를 수정했다(요구사항 분석에 있는 걸 직접 만들까 하다가 시간이 없어서 그냥 해보기로 했다..
전에는 몰랐는데 pdf파일이 따로 있는 것 같다)
잘못된 코드를 올려서 다시 연습했다..
계속 공부해서 실수가 나온 것 같다


class faewawefaw{
    private static faewawefaw afaewf=new faewawefaw();
    private static int t=3;
    private wfeew fawew;
    private faewawefaw() {
        this.t=4;
        
    }
    public void setfaewf(wfeew fawew) {
        this.fawew=fawew;
    }
    public static faewawefaw getAfaewf() {
        return afaewf;
    }
}   

public class java42 {
    public static void main(String[] args) {
        wfeew fw=new wfeew(3);
        wfeew wt4=new wfeew(11);
        faewawefaw wewnl=faewawefaw.getAfaewf();
        faewawefaw wewnl2=faewawefaw.getAfaewf();
        wewnl.setfaewf(fw);
        wewnl2.setfaewf(wt4);
        System.out.println(wewnl.getAfaewf());
        System.out.println(wewnl2.getAfaewf());


    }
}

3월 20일이랑 3월 21일 분량은 공부하는 거 요약한 것은 내일 올려야될 꺼 같은데
화장실 변기가 음식물 버린다고 막혀서 뚫어뻥 비슷한 걸 샀는데
며칠 째 그것떄문에 시도해보다가 안되서 새로 구매했는데
배송이 문제가 있어 오늘 그거 처리한다고 오늘도 요약할 시간이 따로 없었다
진도만 나가고, 내일 요약해서 등록해야겠다
내일 뚫어뻥오면 그것때문에 또 바빠서 시간이 없을지는 모르겠는데
언제 올지 모르겠는데 그것 오면 온다고 또 바빠질 것 같다..
이 날이랑 20일에 스프링 공부한걸 따로 요약하는게 맞을 것 같아서
지금 올려야겠다
프로토타입 스코프 범위에 대해 더 공부하고,
@Configuration을 사용안하면 싱글톤이 아니라 새로운 객체가 생성된다고 하셔서 그러면
싱글톤이 아니라 프로토타입 처럼 작동하는 게 아닌가 싶어서 직접 짜보니까

public class PraticeConfig {

    @Bean
    public Awefe awefe() {
        System.out.println("??");
        return new Awefe();
    }

//    @Bean
//    public Awefe awefe2() {
//        System.out.println("???");
//        return new FSESF();
//    }
    // 같은 타입이라 getBean으로 주입이 안됨


    @PostConstruct
    public void init() {
        System.out.println("SingletonBean.init");
    }
    @PreDestroy
    public void destroy() {
        System.out.println("SingletonBean.destory");
    }

    private int count=0;
    public void addCount() {
        count++;
    }
    public int getCount() {
        return count;
    }
}

위와 같이 짜보고 강사님이
@Configuration 짜볼때랑 비교해보니까
@Configuration을 사용안하면 프로토타입이 아니라 그냥
같은 빈에서 new Repsoitory()를 할 때,
새로운 게 참조 되는 것으로 짜지는 것인 걸 알게되었다
(싱글톤이었으면, 다른 class에서 같은 class를 new 객체(); 로 생성할 떄
이미 빈이 등록되어있어, 자동으로 new 객체();를 안하고 기존 객체를 반환한다
그리고,프로토타입이었으면, 객체를 생성할 떄, 같은 class에서 같은 값을 new 객체();로 여러번 호출해서 생성할 때에도
다른 객체로 생성된다
그런데, @Configuration은 같은 class(MemberService)에서 같은 class(MemoryMemberRepository를 import한 경우)
을 new 객체();로 여러번 호출해도 이미 빈에 등록되어 같은 객체를 반환하는데,
동시에 다른 class(MemberService, MemberOrder)에서 같은 class(MemoryMemberRepository를 import한 경우)
에는 new 객체();를 할 때, MemberService의 MemoryMemberRepository와 MemberOrder의 MemoryMemberRepository가 공유가 안되어서 각각 새로운 객체를 생성한다
그리고 자바에서는 플라이웨이트 패턴으로 짜면 되지만, 스프링은 싱글톤으로 짜도
새로운 객체를 생성하려고 하면 provider를 이용하면 작동하기 때문에 위와 같이 코딩해서 짠다
그리고, uuid가 사용자가 접근할 떄 사용자가 같은 컴퓨터의 경우 같은 uuid를 가리킬 줄 알았는데 서버를 작동시켜보니
그게 아니라 일정한 시간만 uuid가 같고, 다르게 나와서 찾아보니 세션쪽 인 것 같던데
나중에 강사님 강의 중에 HTTP관련 강의 볼 떄 열심히 봐야겠다는 생각이 들었다
강사님이 실력이 빨리 느는 유형으로 야생형을 추천해주시길래 야생형으로 공부하기로 했다





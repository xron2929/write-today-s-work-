2월 26~27일에 한건데, 순서를 왔다 갔다가 해서 24일로 적겠다..
c언어 같은 경우에는 스택 메로리를 만들면 첫 주소만 랜덤이고 그 뒤부터는 4바이트 씩 증가하는데, 
System.out.println(System.identityHashCode(t));
이걸로 보니 위의 경우에는 스택 메모리가 호출할 때 그런 규칙이 없고, 컴파일러 환경때문에 그런지는 모르겠는데,
어떠한 조건이 있기 전까지는 계속 호출할 때 마다 주소가 같게 나오는 걸 확인하고,
안의 코드를 열어보려니까 native만 되어있고 코드를 열어볼 수 없었다.
그리고, c++은 상속된 메모리 주소를 확인해보니 부모 메모리주소랑 자식 메모리주소가 얕은 복사의 대입연산을 이용했을 때 다르게 나왔다
그러나 java는 얕은 복사의 대입연산을 이용하고 위와 같이 찍어보니 똑같다는 것을 확인 할 수 있었다.

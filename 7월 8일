와이어샤크랑 피들러 써보면서 익혔다
와이어샤크는 모든 프로토콜이 다 보이고, 피들러는 HTTP만 보이는데,
HTTPS 프로토콜 복호화해서 같이 사용하면 시너지는 약간 있는 것 같다
나중에 패킷 다룰 때, 더 좋은 기술이 있겠지만, 캐시 서버에 와이어샤크랑 피들러 깔아서 와이어샤크로 sql 인젝션이나, "3 way handshake 공격" 포트 감지(전자는 db로도 분석되긴 한다)
피들러로 파일 공격이나 스크립트 공격, CSRF, sql 어떤 식으로 공격했는지등 좀 더 공격자가 어떤 방법으로 공격했는지 자세히 알 수 있는 것 같다
HTTPS는 피들러처럼 인증서 조작으로 안해도, 그냥 3way handshake 쓰면 도메인이 다 들통난다
물론 해당 도메인만 알지 도메인의 어디를 접근했는지는 모르지만, 꼭 인증서 조작을 안해도 어차피 ip는 다 들통나서..
그냥 칼리 리눅스에 있는 명령어 중에 MITM 이용해서 도메인 다른 ip로 주작 치거나 할 수 있어서 딱히 상관없는 것 같았다
HTTPS는 완전한 프로토콜인줄 알았는데, 결국에 Fiddler 깔아서, 인증서 주작치고, MITM으로 라우터 주작 치면 말 그대로 그게 해킹이다
방화벽으로 막을 수는 있을텐데.. 뚫려있다면 사용자가 모르는 경우 답이 없다
꼭 그게 아니더라도 DNS 스니핑으로 조작쳐도 뚫려서 결국에 사용자는 해킹 사실을 잘 모른다면, 개발자가 MITM을 최대한 막아줘도 어차피 뚫리는 구조이다
사용자 -> 중간자 -> 서버 여기까지가 arpsnoof를 이용한 MTIM 상태일껀데,
이게 다 가능한 이유는 우리가 해당 와이파이에 들어온 순간 다 그 와이파이에 대한 게이트웨이,라우터에 대해 소유권을 가지고 있어서
서로가 서로에게 관찰이 가능한 형태다
결국에 사용자가 naver.com을 치면, 중간자가 Dns 스니핑으로 naver.com ip대신 이미지가 똑같은 다른 서버의 다른 ip를 가져다주고, https로 들어와있고
마찬가지로, https로 로그인하고 중간자가 서버에게도 동일하게 적용한다면 이를 통해 공격이 가능하다
물론 HTTP는 더 직접적으로 가능하지만, https는 사용자에게 안들키려면 캡차 같은 걸 크롤링 해서 서버로 가져오게 해야되서 해킹이 중간자 공격으로 어렵게 될 수도 있다
꼭 그게 아니더라도, 해당 id랑 password만 받은 상태로 다른 서버에 로그인만 해보고, 로그인 안된다고 에러 뜨게 하면서 조금 시간이 지나면 중간자 공격했던 걸 다 끊는다던가 처럼
tls 1.3은 아직 지원안하기는 하는데, 사실 tls1.3 서버를 공유하는 곳도 잘 없고,(클라우드페어같이 막 나오거나) 일부 브라우저만 지원해서 큰 의미는 없는 것 같다
결국에 HTTPS 쓸 거면 캡차 기능은 필요하다는 것정도는 느낀 것 같다
어쩃든 MITM은 완벽한것이 아니라는 사실은 많이 느꼈던 것 같다
그 밖에도 전에 공부했던 것중에 반가웠던 것들을 많이 만나긴 했던 것 같다

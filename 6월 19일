Pohlig-Hellman Algorithm은 %41을 하려고하면
결국 a^(p-1)에서 %p로 쪼개는 건데, 각각 p-1을 a또는 b로 쪼갤 수 있는데
이렇게 쪼갰을 때의 나머지를 더한 값과 몫을 더한 값들의 조건을 다 지키는 배수와 같다
결국에 이걸 구하려고 하는건데, 31이면 30은 2,3,5로 분리된다(28이면 4와 7같이 합성수로 해도 될 것 같다)
그러면 이 떄는 3의 제곱수가 전체 제곱수에서 3이랑 5곱하고 r곱한 값만 남겨주고, r곱하고 2랑 5곱한 값과 r곱하고 2랑 3곱한 값만 남겨주면, 여기서 mod n도 각각 3,5곱한거 2랑 5 곱한거  
그렇게 들어간다.
그거랑 알아야 될점이 x^(p-1) 구조라면, 여기서 x^p*x^2를 하면 2차잉여냐 비잉여냐에 따라 달라지겠지만, 결국엔 p-1로 사이클 도는 구조인건 동일하다(단 이 떄 p는 소수)
그리고, 며칠전에 결국 제곱의 경우 결국 a 3a 9a 27a 이렇게 돌아가는 구조이기 떄문에, 나머지도 성립하는데, 마찬가지로, 나머지 값이랑 x^(p-1)이랑 각각 n승 했을 떄 역시도
곱 법칙이 성립한다 그리고 이 사이클 자체가 중복이 되는데, 5단위로 묶으면 중복이 안되지 않나 싶었는데, 직접해보니까 동일하게 적용되는 걸 확인해볼 수 있었다
결국에 a^10 a^6 a^15로 나머지값도^10,^6,^15로 각각의 제곱수에 10,6,15를 더한 결과의 값을 나머지로 연산해 10칸 이동하면 그만큼 나머지도 10칸 사이클 이동하도록 맞춰준다
a^(ti + a1+tk)로 맞춘 것이라서 각각의 ti랑 tk를 구해내고, 여기서 중국인의 나머지 정리로, 이 3개가 공존하는 a1을 도출해내는 것이 목적이다
a1은 당연히 나머지가 1인 상수라 a^10,a^6,a^15 각각 나머지가 1인 사이클이 반복되는 여러 제곱수가 존재하는데, 이들이 공통이 되는 제곱수를 도출하는 것이 필요하고 이를 구하는건데
찾아보니 이게 제일 빠른 구조 같다
나중엔 알고리즘 짜는 연습도 해야되는데, 그거 생각하면 머리가 많이 터질 것 같긴하다




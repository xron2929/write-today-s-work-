현업자 분들 말씀을 들었는데 되게 기업마다 방식이 다른 것 같다
예를 들어 지금 배운 외래 키 잡는 방법도 주민번호같은 연관관계 fk로 걸어버리면 외래 키랑 테이블 다시 설계해서 바꿔야 되니까
외래키 등록은 따로 안하신다는 분도 계셨고, 김영한 강사님의 경우는 그런 경우때문에 처음부터 주민번호 같은 키 대신에
잘 안 바뀌는 키를 그냥 생성해서(uuid,그냥 단순히 식별자를 위한 id) 이걸 이용하시는 걸 선호하셨다
id테이블을 생성하면 메모리가 낭비되니까 주민번호로 생성하되, 법 바뀌면 그에 따라 코드를 바꾸는 방법, 처음부터 이런 문제를 대비하기 위해 id를 새로 하나 생성하는 방법
이런 식으로 주어진 상황에 대비하는 방법이 다르신 것 같다
식별자를 위한 id를 만들면, id컬럼을 만들어야 되니까 그 동안 db에서 데이터 갯수만큼 id컬럼을 생성해야되니 비효율적일 수 있다는 단점이 있지만,
fk를 거니까, 명시적이라 연관관계가 연결된 곳을 찾기가 쉬워지고 놓칠 가능성이 줄어든다는 장점이 있다
반대로, 주민번호를 이용하면, fk까지 걸어버릴 때 유지보수가 어려워질 수 있기 때문에
fk는 걸지않고, 주민번호를 이용하되, 법이나 구조가 바뀌면 그에 따라 수정하는 방법이다
이렇게 하면 연관관계가 명시적이지 않지만, 그만큼 간단하게 db에만 등록하면 되니 간단하고,
전자의 경우 테이블이 너무 많아져서 연관관계에 대한 수정이 필요한 경우 이러한 수정을 하지않아도 된다는 장점이 있다








